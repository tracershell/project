name: CI/CD Pipeline
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: docker.io
      IMAGE_NAME: tshelldocker/my-cicd-demo

    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - run: |
          docker build -f client/Dockerfile.prod -t $REGISTRY/$IMAGE_NAME:client-latest .
          docker build -f server/Dockerfile.prod -t $REGISTRY/$IMAGE_NAME:server-latest ./server

      - run: |
          docker push $REGISTRY/$IMAGE_NAME:client-latest
          docker push $REGISTRY/$IMAGE_NAME:server-latest

      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      - name: ðŸ“‚ Ensure nginx dir on remote
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
            "sudo mkdir -p /home/apple2ne1/project/nginx"

      - name: ðŸ“‘ Upload nginx.conf via sudo tee
        run: |
          cat nginx/nginx.conf | ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
            "sudo tee /home/apple2ne1/project/nginx/nginx.conf > /dev/null"

      - name: ðŸš€ SSH and run docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
              cd /home/apple2ne1/project
              docker-compose pull
              docker-compose up -d
            EOF

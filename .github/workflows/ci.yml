name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: tshelldocker/my-cicd-demo

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📦 Build production images
        run: |
          docker build -f client/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:client-latest .
          docker build -f server/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:server-latest ./server

      - name: 🚀 Push images to DockerHub
        run: |
          docker push $REGISTRY/$IMAGE_NAME:client-latest
          docker push $REGISTRY/$IMAGE_NAME:server-latest

      - name: 🔑 Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 1) 사용자 권한으로 nginx 디렉터리 생성
      - name: 📂 Create remote nginx dir
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
            "mkdir -p /home/apple2ne1/project/nginx"

      # 2) docker-compose.yml 전송
      - name: 📁 Copy docker-compose.yml via scp
        run: |
          scp -o StrictHostKeyChecking=no -P 2203 \
            docker-compose.yml \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/apple2ne1/project/docker-compose.yml

      # 3) nginx.conf 전송
      - name: 📑 Copy nginx.conf via scp
        run: |
          scp -o StrictHostKeyChecking=no -P 2203 \
            nginx/nginx.conf \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/apple2ne1/project/nginx/nginx.conf

      # 4) 배포 (docker-compose pull & up)
      - name: 🚀 SSH and run docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
              cd /home/apple2ne1/project
              docker-compose pull
              docker-compose up -d
            EOF

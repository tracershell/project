name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: tshelldocker/my-cicd-demo  # 본인의 DockerHub 이미지 경로

    steps:
      # 1) 전체 커밋 이력으로 체크아웃 (서브모듈 포함)
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      # 2) Debug: 워크스페이스 구조 확인
      - name: 🔍 Debug workspace
        run: |
          echo "=== Repository root ==="
          ls -R .
          echo ""
          echo "=== nginx directory ==="
          ls -al nginx || echo "→ nginx 폴더가 없습니다"
          echo ""
          echo "=== docker-compose.yml ==="
          ls -al docker-compose.yml || echo "→ docker-compose.yml이 없습니다"

      # 3) DockerHub 로그인
      - name: 🐳 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 4) Production 이미지 빌드
      - name: 📦 Build production images
        run: |
          docker build -f client/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:client-latest .
          docker build -f server/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:server-latest ./server

      # 5) 빌드된 이미지 Push
      - name: 🚀 Push images to DockerHub
        run: |
          docker push $REGISTRY/$IMAGE_NAME:client-latest
          docker push $REGISTRY/$IMAGE_NAME:server-latest

      # 6) SSH 키 설정
      - name: 🔑 Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 2203 ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      # 7a) docker-compose.yml 복사
      - name: 📁 Copy docker-compose.yml
        run: |
          scp -P 2203 docker-compose.yml \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/apple2ne1/project/

      # 7b) nginx.conf 복사
      - name: 📁 Copy nginx/nginx.conf
        run: |
          scp -P 2203 nginx/nginx.conf \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/apple2ne1/project/nginx/

      # 8) SSH로 접속해 컨테이너 재시작
      - name: 🔧 Deploy via SSH
        run: |
          ssh -p 2203 ${{ secrets.USERNAME }}@${{ secrets.HOST }} << 'EOF'
            cd /home/apple2ne1/project
            docker-compose pull
            docker-compose up -d
          EOF

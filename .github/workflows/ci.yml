name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      IMAGE_NAME: tshelldocker/my-cicd-demo

    steps:
      # 1. 코드 체크아웃
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # 2. DockerHub 로그인
      - name: 🐳 Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. 프로덕션 이미지 빌드
      - name: 📦 Build production images
        run: |
          docker build -f client/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:client-latest .
          docker build -f server/Dockerfile.prod \
            -t $REGISTRY/$IMAGE_NAME:server-latest ./server

      # 4. 이미지 푸시
      - name: 🚀 Push images to DockerHub
        run: |
          docker push $REGISTRY/$IMAGE_NAME:client-latest
          docker push $REGISTRY/$IMAGE_NAME:server-latest

      # 5. SSH 키 세팅
      - name: 🔑 Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SERVER_SSH_KEY }}

      # 6. 기존 nginx.conf(파일 혹은 디렉터리) 제거 & nginx 디렉터리 생성 (755 perms)
      - name: 📂 Prepare remote nginx dir
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
            "rm -rf ~/project/nginx/nginx.conf && mkdir -p -m 755 ~/project/nginx"

      # 7. docker-compose.yml 복사
      - name: 📁 Copy docker-compose.yml via scp
        run: |
          scp -o StrictHostKeyChecking=no -P 2203 \
            docker-compose.yml \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/project/docker-compose.yml

      # 8. nginx.conf 복사 (절대 경로 지정)
      - name: 📑 Copy nginx.conf via scp
        run: |
          scp -o StrictHostKeyChecking=no -P 2203 \
            nginx/nginx.conf \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/${{ secrets.USERNAME }}/project/nginx/nginx.conf

      # 9. 배포: docker-compose pull & up
      - name: 🚀 SSH and run docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no -p 2203 \
            ${{ secrets.USERNAME }}@${{ secrets.HOST }} \
            "cd /home/${{ secrets.USERNAME }}/project && docker-compose pull && docker-compose up -d"
